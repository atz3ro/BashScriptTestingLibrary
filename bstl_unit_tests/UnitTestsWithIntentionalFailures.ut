#!/bin/bash

source ../BashScriptTestingLibrary.shl

function testSetup () {
    touch testFile
}

function testAssertEqualsWithStrings () {
    assertEquals "something" "something"
} 


function testAssertEqualsWithIntegers () {
    assertEquals 10 10
} 


function testAssertEqualsWithIntegers2 () {
    assertEquals 5 $((10 - 5))
}


function testAssertEqualsWithIntegers3 () {
    assertEquals 1 1
}


function testAssertEqualsWithDoubles () {
    assertEquals 5.5 5.5
}


function testAssertEqualsWithDoubles2 () {
    assertEquals 5.5 5.50
}


function testAssertEqualsWithArrays () {
    local array1=(1,2,3)
    local array2=(1,2,3)
    assertEquals $array1 $array2
}


function testAssertNotEqualsWithStrings () {
    assertNotEquals "something" "something else"
}


function testAssertNotEqualsWithIntegers () {
    assertNotEquals 5 6
}


function testAssertNotEqualsWithArrays () {
    local array1=(1,2,3)
    local array2=(4,5,6)
    assertNotEquals $array1 $array2 
}


function testAssertNull () {
    nullString=""
    assertNull "$nullString"
}


function testAssertTrueWithFilename () {
    assertTrue  "-f \"testFile\""
}


function testAssertTrueWithIntegers () {
    assertTrue "10 = 10"
}


function testAssertFalseWithIntegers () {
    assertFalse "10 = 5"
}


function testAssertFalseWithFilename () {
    assertFalse  "-f \"testFile2\""
}


function testAssertFalseWithArray () {
    local array1=(1,2,3)
    local array2=(4,5,6)
    assertFalse "${array1} = ${array2}" 
}

function testAssertContainsWithString () {
    local string="FooBar"
    local substring="Bar"
    assertContains $substring $string
}

function testAssertContainsWithArray () {
    local array1=(1,2,3)
    local num2=2
    assertContains $num2 $array1
}

function testAssertEqualsWithStringsFailure () {
    assertEquals "something" "something else"
}


function testAssertEqualsWithIntegersFailure () {
    assertEquals 5 10
}


function testAssertEqualsWithArraysFailure () {
    local array1=(1,2,3)
    local array2=(4,5,6)
    assertEquals $array1 $array2
}


function testAssertNotEqualsWithIntegersFailure () {
    assertNotEquals 5 5
}


function testAssertNotEqualsWithStringsFailure () {
    assertNotEquals "same" "same"
}


function testAssertNotEqualsWithArrayFailure () {
    local array1=(1,2,3)
    local array2=(1,2,3)
    assertNotEquals $array1 $array2
}


function testAssertNullWithIntegerFailure () {
    assertNull 5
}


function testAssertNullWithStringFailure () {
    assertNull "something"
}


function testAssertNullWithArrayFailure () {
    local array1=(1,2,3)
    assertNull $array1
}


function testAssertTrueWithFilenameFailure () {
    assertTrue  "-f \"testFile2\""
}


function testAssertTrueWithIntegersFailure () {
    assertTrue  "10 = 5"
}


function testAssertFalseWithFilenameFailure () {
    assertFalse "-f \"testFile\""
}

function testAssertFalseWithIntegersFailure () {
    assertFalse "10 = 10"
}

function testAssertContainsWithStringsFailure () {
    local string="FooBar"
    local substring="BarBar"
    assertContains $substring $string
}

function testAssertContainsWithArrayFailure () {
    local array1=(4,5,6)
    local num2=7
    assertContains $num2 $array1
}

function testAssertEqualsWrongArgsNum() {
    assertEquals "something"
}

function testAssertNotEqualsWrongArgsNum() {
    assertNotEquals 20
}

function testAssertNullWrongArgsNum() {
    assertNull
}

function testAssertTrueWrongArgsNum() {
    assertTrue
}

function testAssertFalseWrongArgsNum() {
    assertFalse
}

function testAssertContainsWrongArgsNum() {
    assertContains "Foo"
}

function testTeardown () {
    rm testFile
}


runUnitTests